

7
Azure Data Fundamentals
Azure SQL Database is often used for:

Modern cloud applications that need to use the latest stable SQL Server features.
Applications that require high availability.
Systems with a variable load that need the database server to scale up and down quickly.




8
Azure Data Fundamentals
Elastic Pool
This option is similar to Single Database, except that by default multiple databases can share the same resources, such as memory, data storage space, and processing power through multiple-tenancy. The resources are referred to as a pool. This model is useful if you have databases with resource requirements that vary over time, and can help you to reduce costs.



9
Azure Data Fundamentals
PostgreSQL is a hybrid relational-object database. You can store data in relational tables, but a PostgreSQL database also enables you to store custom data types, with their own non-relational properties



10
Azure Data Fundamentals
PostgreSQL is a hybrid relational-object database. You can store data in relational tables, but a PostgreSQL database also enables you to store custom data types, with their own non-relational properties



11
Azure Data Fundamentals
Azure Database for MySQL is a Paas implementation of MySQL in the Azure cloud, based on MySQL Community Edition. Automatic backups are provided, with point-in-time restore.



12
Azure Data Fundamentals
With Azure Database for MySQL, server parameters enable you to configure server settings such as lock modes, maximum number of connections, and timeouts.



13
Azure Data Fundamentals
Certain operations aren't available with Azure Database for MySQL. These functions are primarily concerned with security and administration. Azure manages these aspects of the database server itself.



14
Azure Data Fundamentals
Azure Database for MySQL Flexible Server is a fully managed database as a service offering, with predictable performance and dynamic scalability. Flexible server is the recommended deployment option for all new developments or migrations.



15
Azure Data Fundamentals
Azure Database for MySQL Single Server is a fully managed database as a service offering, with predictable performance and dynamic scalability. Single servers are best for existing applications already using single server.





16
Azure Data Fundamentals
Azure Database for MySQL ensures automatic backups and point-in-time restore for the last 35 days.



17
Azure Data Fundamentals
Some features of on-premises PostgreSQL databases aren't available in Azure Database for PostgreSQL. These features are mostly concerned with the extensions that users can add to a database to perform specialized tasks, such as writing stored procedures in various programming languages (other than pgsql, which is available), and interacting directly with the operating system



18
Azure Data Fundamentals
The single-server deployment option for PostgreSQL provides similar benefits as Azure Database for MySQL. You choose from three pricing tiers: Basic, General Purpose, and Memory Optimized. Each tier supports different numbers of CPUs, memory, and storage sizes; you select one base do on the load you expect to support.



19
Azure Data Fundamentals
Hyperscale (Citus) is a deployment option that scales queries across multiple server nodes to support large database loads. Your database is split across nodes.



20
Azure Data Fundamentals
Azure SQL Managed Instance offers near 100% compatibility with on-prem SQL Server.





21
Azure Data Fundamentals
Which database service is the simplest option for migrating a LAMP application to Azure?

Azure Database for MySQL



22
Azure Data Fundamentals
Azure Blob Storage is a service that enables you to store massive amounts of unstructured data as binary large objects, or blobs, in the cloud. Blobs are an efficient way to store data files in a format that is optimized for cloud-based storage, and applications can read and write them by using the Azure blob storage API.



23
Azure Data Fundamentals
In an Azure storage account, you store blobs in containers. A container provides a convenient way of grouping related blobs together. You control who can read and write blobs inside a container at the container level.



24
Azure Data Fundamentals
In Azure Storage, Block blobs. A block blob is handled as a set of blocks. Each block can vary in size, up to 100 MB. A block blob can contain up to 50,000 blocks, giving a maximum size of over 4.7 TB. The block is the smallest amount of data that can be read or written as an individual unit. Block blobs are best used to store discrete, large, binary objects that change infrequently.




25
Azure Data Fundamentals
In Azure Storage Page blobs. A page blob is organized as a collection of fixed size 512-byte pages. A page blob is optimized to support random read and write operations; you can fetch and store data for a single page if necessary. A page blob can hold up to 8 TB of data. Azure uses page blobs to implement virtual disk storage for virtual machines.



26
Azure Data Fundamentals
In Azure Storage Append blobs. An append blob is a block blob optimized to support append operations. You can only add blocks to the end of an append blob; updating or deleting existing blocks isn't supported. Each block can vary in size, up to 4 MB. The maximum size of an append blob is just over 195 GB.



27
Azure Data Fundamentals
Blob storage provides three access tiers, which help to balance access latency and storage cost:

The Hot tier is the default. You use this tier for blobs that are accessed frequently. The blob data is stored on high-performance media.



28
Azure Data Fundamentals
Blob storage provides three access tiers, which help to balance access latency and storage cost:

The Cool tier has lower performance and incurs reduced storage charges compared to the Hot tier. Use the Cool tier for data that is accessed infrequently. It's common for newly created blobs to be accessed frequently initially, but less so as time passes. In these situations, you can create the blob in the Hot tier, but migrate it to the Cool tier later.



29
Azure Data Fundamentals
Blob storage provides three access tiers, which help to balance access latency and storage cost:
The Archive tier provides the lowest storage cost, but with increased latency. The Archive tier is intended for historical data that mustn't be lost, but is required only rarely. Blobs in the Archive tier are effectively stored in an offline state.



30
Azure Data Fundamentals
Typical reading latency for the Hot and Cool tiers is a few milliseconds, but for the Archive tier, it can take hours for the data to become available. To retrieve a blob from the Archive tier, you must change the access tier to Hot or Cool. The blob will then be rehydrated. You can read the blob only when the rehydration process is complete.




Process finished with exit code 0
C:\Users\m4ple\PycharmProjects\pythonProject1\venv\Scripts\python.exe C:/Users/m4ple/PycharmProjects/pythonProject1/crads.py
1
Azure Data Fundamentals
You can create lifecycle management policies for blobs in a storage account. A lifecycle management policy can automatically move a blob from Hot to Cool, and then to the Archive tier, as it ages and is used less frequently (policy is based on the number of days since modification). A lifecycle management policy can also arrange to delete outdated blobs.





2
Azure Data Fundamentals
To create an Azure Data Lake Store Gen2 files system, you must enable the Hierarchical Namespace option of an Azure Storage account.



3
Azure Data Fundamentals
Systems like Hadoop in Azure HDInsight, Azure Databricks, and Azure Synapse Analytics can mount a distributed file system hosted in Azure Data Lake Store Gen2 and use it to process huge volumes of data.



4
Azure Data Fundamentals
Azure Files is essentially a way to create cloud-based network shares, such as you typically find in on-premises organizations to make documents and other files available to multiple users.



5
Azure Data Fundamentals
You create Azure File storage in a storage account. Azure Files enables you to share up to 100 TB of data in a single storage account. This data can be distributed across any number of file shares in the account.



6
Azure Data Fundamentals
Azure File Storage offers two performance tiers. The Standard tier uses hard disk-based hardware in a datacenter, and the Premium tier uses solid-state disks. The Premium tier offers greater throughput, but is charged at a higher rate



7
Azure Data Fundamentals
Azure Files supports two common network file sharing protocols:

Server Message Block (SMB) file sharing is commonly used across multiple operating systems (Windows, Linux, macOS).
Network File System (NFS) shares are used by some Linux and macOS versions. To create an NFS share, you must use a premium tier storage account and create and configure a virtual network through which access to the share can be controlled.



8
Azure Data Fundamentals
Azure Table Storage is a NoSQL storage solution that makes use of tables containing key/value data items. Each item is represented by a row that contains columns for the data fields that need to be stored.



9
Azure Data Fundamentals
An Azure Table enables you to store semi-structured data. All rows in a table must have a unique key (composed of a partition key and a row key), and when you modify data in a table, a timestamp column records the date and time the modification was made; but other than that, the columns in each row can vary.



10
Azure Data Fundamentals
When you search for data in an Azure Table, you can include the partition key in the search criteria. This helps to narrow down the volume of data to be examined, and improves performance by reducing the amount of I/O (input and output operations, or reads and writes) needed to locate the data.





11
Azure Data Fundamentals
In an sandbox, I have manually entered data into the Azure Table using the storage browser interface. In a real scenario, application developers can use the Azure Storage Table API to build applications that read and write values to tables, making it a cost effective and scalable solution for NoSQL storage.





12
Azure Data Fundamentals
What are the elements of an Azure Table Storage key?
Partition key and row key
The partition key identifies the partition in which a row is located, and the rows in each partition are stored in row key order.



13
Azure Data Fundamentals
What should you do to an existing Azure Storage account in order to support a data lake for Azure Synapse Analytics?
Upgrade the account to enable hierarchical namespace and create a blob container
Enabling a hierarchical namespace adds support for Azure Data Lake Storage Gen 2, which can be used by Synapse Analytics.



14
Azure Data Fundamentals
3. Why might you use Azure File storage?
To enable users at different sites to share files.
You can create a file share in Azure File storage, upload files to this file share, and grant access to the file share to remote users.





15
Azure Data Fundamentals




16
Azure Data Fundamentals




17
Azure Data Fundamentals




18
Azure Data Fundamentals




19
Azure Data Fundamentals




20
Azure Data Fundamentals




21
Azure Data Fundamentals




22
Azure Data Fundamentals




23
Azure Data Fundamentals




24
Azure Data Fundamentals




25
Azure Data Fundamentals




26
Azure Data Fundamentals




27
Azure Data Fundamentals




28
Azure Data Fundamentals




29
Azure Data Fundamentals




30
Azure Data Fundamentals





Process finished with exit code 0
